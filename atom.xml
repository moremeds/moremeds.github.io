<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Chenxi LI]]></title>
  <subtitle><![CDATA[Hack of tech]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://moremeds.github.io/"/>
  <updated>2016-01-03T22:28:10.000Z</updated>
  <id>http://moremeds.github.io/</id>
  
  <author>
    <name><![CDATA[Chenxi Li]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Grafana Stack with InfluxDB]]></title>
    <link href="http://moremeds.github.io/blog/Grafana-Stack-with-InfluxDB/"/>
    <id>http://moremeds.github.io/blog/Grafana-Stack-with-InfluxDB/</id>
    <published>2016-01-03T19:22:37.000Z</published>
    <updated>2016-01-03T22:28:10.000Z</updated>
    <content type="html"><![CDATA[<p>Collecting and analyzing metrics are the key to understand a system’s runtime behaviors and thus to provide a better guideline of optimization. As the user of a metrics system, you might want to collect metric and event with simple APIs, retrieve historical metric data, and view visualized metrics statistics.</p>
<p>This article shows you how to build a metric system with <a href="https://github.com/etsy/statsd" target="_blank" rel="external">StatsD</a>, <a href="https://influxdata.com/" target="_blank" rel="external">influxdb</a>, and <a href="http://grafana.org/" target="_blank" rel="external">Grafana</a>, as an example metrics system that composes of a client, a data storage, and visualization UI. There are many available open source packages.</p>
<p><img src="/images/grafana/LogicFlow.png" width="60%" height="60%"></p>
<a id="more"></a>
<p>The figure above shows you the data flow. User configures the application, and sends metrics to StatsD server. StatsD stores the metrics data in InfluxDB, a time-series database, where Grafana retrieves data and displays the visualized metrics.</p>
<p>Let’s briefly discuss the software collection before moving on to configuration.</p>
<ul>
<li>StatsD is a daemon that collects and aggregates metrics data. With the well-accepted UDP protocol, <a href="https://github.com/etsy/statsd/wiki" target="_blank" rel="external">clients library</a> for almost all major programming language. In the meantime, StatsD can also serves as a local aggregator, providing a extensible backend architecture.</li>
<li><a href="http://docs.grafana.org/installation/rpm/" target="_blank" rel="external">Grafana</a> is a metrics dashboard that provides data visualization and generates statistic graph. You can choose the most suitable approach to install. Configuration file can be found <a href="http://docs.grafana.org/installation/configuration/" target="_blank" rel="external">here</a>.</li>
<li><a href="https://docs.influxdata.com/influxdb/v0.9/introduction/overview/" target="_blank" rel="external">InfluxDB</a> is a time-series database for storing the metrics data.</li>
</ul>
<h2 id="StatsD"><a href="#StatsD" class="headerlink" title="StatsD"></a>StatsD</h2><p>When the StatsD is placed in a suitable location, please edit <code>config.js</code> to configure StatsD to send data to InfluxDB. Possible example is as below:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1.&#123;</span><br><span class="line">2.    influxdb: &#123;</span><br><span class="line">3.        host: '127.0.0.1', // InfluxDB host. (default 127.0.0.1)</span><br><span class="line">4.        port: 8086, // InfluxDB port. (default 8086)</span><br><span class="line">5.        database: 'demo',  // InfluxDB database instance. (required)</span><br><span class="line">6.        username: 'root', // InfluxDB database username. (required)</span><br><span class="line">7.        password: 'root', // InfluxDB database password. (required)</span><br><span class="line">8.        flush: &#123;</span><br><span class="line">9.            enable: true // Enable regular flush strategy. (default true)</span><br><span class="line">10.        &#125;,</span><br><span class="line">11.        proxy: &#123;</span><br><span class="line">12.            enable: false, // Enable the proxy strategy. (default false)</span><br><span class="line">13.            suffix: 'raw', // Metric name suffix. (default 'raw')</span><br><span class="line">14.            flushInterval: 1000 // Flush interval for the internal buffer.</span><br><span class="line">15.                // (default 1000)</span><br><span class="line">16.        &#125;</span><br><span class="line">17.    &#125;,</span><br><span class="line">18.    port: 8125, // StatsD port.</span><br><span class="line">19.    backends: ['./backends/console’, 'statsd-influxdb-backend'],</span><br><span class="line">20.    debug: true,</span><br><span class="line">21.    legacyNamespace: false,</span><br><span class="line">22.    keyNameSanitize: false</span><br><span class="line">23.&#125;</span><br></pre></td></tr></table></figure>
<p>Please note that the key word <strong>backends</strong>, which specifies the destination of the metrics data, and the dependency could be installed as below:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.$ <span class="built_in">cd</span> statd</span><br><span class="line"><span class="number">2</span>.</span><br><span class="line"><span class="number">3</span>.$ npm install statsd-influxdb-backend <span class="operator">-d</span></span><br><span class="line"><span class="number">4</span>.</span><br><span class="line"><span class="number">5</span>.$ npm install</span><br></pre></td></tr></table></figure>
<p><code>flushInterval</code> is set to send batch of information to InfluxDB every 10s by default. <code>keyNameSanitize</code>, please set it to <code>false</code> when you are connecting InfluxDB or have some special characters in the name tags.</p>
<h2 id="Grafana"><a href="#Grafana" class="headerlink" title="Grafana"></a>Grafana</h2><p>Configuration for Grafana mainly contains two sections, one is for <code>Data Sources</code>, and another is for templating/query. I will focus on configure the data source in the article.</p>
<p>Since the DataSource can only be configured after organisation is created, it would be better to sign-up as root and create a default organisation. Then change the anonymous auth settings with your newly-created org. This will allow users without login view the stats information, but they won’t be able to modify the charts’.</p>
<p>If you created the root user (you may call it whatever you like), and login with the detail, you will find the DataSource section looks like this snapshot:</p>
<p><img src="/images/grafana/dataSource.png" alt=""></p>
<p>Select InfluxDB 0.9 as the latest (or whatever your influxDB version is), and then enter details you set for your InfluxDB instance. In the dashboard you may create a new graph point to your new data source.</p>
<h2 id="InfluxDB"><a href="#InfluxDB" class="headerlink" title="InfluxDB"></a>InfluxDB</h2><p>Once database service is started, the default port for Admin Web UI is <code>8083</code>, and DataSource Port is <code>8086</code>.</p>
<p>In the admin UI, the dropdown menu shows some template query for basic operation. As mentioned before influxDB offers a <a href="https://docs.influxdata.com/influxdb/v0.9/concepts/crosswalk/" target="_blank" rel="external">SQL-like query style</a>. Simply put, <code>MEASUREMENTS</code> is equivalent to <code>TABLE</code>, <code>TAGS</code> is equivalent to <code>COLUMNS</code>, and <code>POINTS</code> is equivalent to <code>ROW</code>. The above link shows a comprehensive induction on how to query InfluxDB.</p>
<p>This <a href="https://docs.influxdata.com/influxdb/v0.9/tools/shell/" target="_blank" rel="external">link</a> shows how to connect to InfluxDB with command-line, if you prefer a geeky way. To find a full document on how InfluxDB works in detail, please click here (Google Search always points to older version).</p>
<p>Once influxDB is installed, it would fairly easy to use. No much settings required.</p>
<p><img src="/images/grafana/influxdbSetting.png" alt=""></p>
<p>The <code>localhost</code> is the server where you installed the influxDB, and <code>8086</code> is the default port for querying data.</p>
<p><strong>Please leave a comment if you have any questions or correct me if there is an update on the new change for these applications.</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Collecting and analyzing metrics are the key to understand a system’s runtime behaviors and thus to provide a better guideline of optimization. As the user of a metrics system, you might want to collect metric and event with simple APIs, retrieve historical metric data, and view visualized metrics statistics.</p>
<p>This article shows you how to build a metric system with <a href="https://github.com/etsy/statsd">StatsD</a>, <a href="https://influxdata.com/">influxdb</a>, and <a href="http://grafana.org/">Grafana</a>, as an example metrics system that composes of a client, a data storage, and visualization UI. There are many available open source packages.</p>
<p><img src="/images/grafana/LogicFlow.png" width="60%" height="60%"></p>]]>
    
    </summary>
    
      <category term="grafana" scheme="http://moremeds.github.io/tags/grafana/"/>
    
      <category term="influxdb" scheme="http://moremeds.github.io/tags/influxdb/"/>
    
      <category term="statsd" scheme="http://moremeds.github.io/tags/statsd/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://moremeds.github.io/blog/hello-world/"/>
    <id>http://moremeds.github.io/blog/hello-world/</id>
    <published>2016-01-03T19:18:21.000Z</published>
    <updated>2016-01-03T19:18:21.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a> and my blog!</p>
<p>This is my very first post. As part of my new year resolution, I would want to keep a track of my development on the upcoming year.</p>
<p>Please check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. I will also keep updating on the following along with configuring this blog.</p>
<p>A special thanks to the theme provider: <a href="https://github.com/pinggod/hexo-theme-apollo" target="_blank" rel="external">Apollo</a>.</p>
<a id="more"></a>
<h2 id="Create_a_new_post"><a href="#Create_a_new_post" class="headerlink" title="Create a new post"></a>Create a new post</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h2 id="Run_server"><a href="#Run_server" class="headerlink" title="Run server"></a>Run server</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server or $ hexo s</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h2 id="Generate_static_files"><a href="#Generate_static_files" class="headerlink" title="Generate static files"></a>Generate static files</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate or $ hexo g</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h2 id="Deploy_to_remote_sites"><a href="#Deploy_to_remote_sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy or hexo d</span><br></pre></td></tr></table></figure>
<p>Also you can combine the command together as below:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a> and my blog!</p>
<p>This is my very first post. As part of my new year resolution, I would want to keep a track of my development on the upcoming year.</p>
<p>Please check <a href="https://hexo.io/docs/">documentation</a> for more info. I will also keep updating on the following along with configuring this blog.</p>
<p>A special thanks to the theme provider: <a href="https://github.com/pinggod/hexo-theme-apollo">Apollo</a>.</p>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://moremeds.github.io/tags/hexo/"/>
    
      <category term="intro" scheme="http://moremeds.github.io/tags/intro/"/>
    
      <category term="tutorial" scheme="http://moremeds.github.io/categories/tutorial/"/>
    
  </entry>
  
</feed>
